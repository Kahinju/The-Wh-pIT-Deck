using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class EnemyController : MonoBehaviour
{
    //Create an empty object that has a BoxCollider2D and name it Boundary 
    //Make that a prefab and create a second boundary as a child to the first boundary so they move together.
    //In the player script, use the code: Physics2D.IgnoreCollision(Boundary.GetComponent<Collider2D>(), GetComponent<Collider2D>()); to ignore the boundary
    //Both the player and the enemy need their BoxColliders to be checked under 'IsTrigger'
    //Make sure to offset the enemy's collider to the right, start the enemy facing right.

    public GameObject player;

    public GameObject enemy;

    public Rigidbody2D bullet; //Create a game object with a Rigidbody2D and BoxCollider2D. 
                               //Reference the bullet's rigidbody in the inspector for the enemy game object
    public int direction;

    public int move_speed;

    public int distance;

    public int bullet_speed;

    void Start()
    {

    }

    void Update()
    {
        patrol();
    }

    void patrol()
    {
        //Make sure 'Queries Start In Colliders' is unchecked under Project Settings
        RaycastHit2D findPlayer = Physics2D.Raycast(transform.position, new Vector2(direction, 0)); //Casts out a ray to look for a collider
        enemy.GetComponent<Rigidbody2D>().velocity = new Vector2(direction, 0) * move_speed;        

        if (findPlayer.distance < distance)
        {
            flipEnemy();
        }
        
    }
    void flipEnemy() //with this 'direction' is stored for future reference.
    {
        if (direction > 0)
        {
            direction = -1;
            Vector2 localScale = gameObject.transform.localScale;
            localScale.x *= -1;
            transform.localScale = localScale;
        }
        else
        {
            direction = 1;
            Vector2 localScale = gameObject.transform.localScale;
            localScale.x *= -1;
            transform.localScale = localScale;
        }


    }
    //There is no longer any need for the detectPlayer function in the player script.
    void OnTriggerEnter2D(Collider2D col)
    {
        if (col.gameObject.tag == "Player")
        {
            Debug.Log("Time to shoot");
            shoot();
            enemy.GetComponent<Image>().material.SetColor("_Color", Color.red);
        }
    }
    void OnTriggerExit2D(Collider2D col)
    {
        enemy.GetComponent<Image>().material.SetColor("_Color", Color.cyan);
    }
    void shoot()
    {
        Rigidbody2D shot = Instantiate(bullet,transform.position, transform.rotation); //Materializes bullet

        shot.velocity = new Vector2(direction, 0) * bullet_speed; //shoots bullet
    }
}
